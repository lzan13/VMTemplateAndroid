plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

// 获取配置信息
def configs = rootProject.ext.configs

android {
    compileSdk configs.compileSdkVersion

    defaultConfig {
        minSdk configs.minSdkVersion
        targetSdk configs.targetSdkVersion

        // 配置信息
//        buildConfigField("String", "pushAppId", configs.pushAppId)
//        buildConfigField("String", "pushAppKey", configs.pushAppKey)
    }

    buildTypes {
        release {
            minifyEnabled false
            // 配置 Java 编译版本
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'consumer-rules.pro'
        }
    }

    // 多渠道打包配置
    flavorDimensions "default"
    productFlavors {
        develop {
            dimension = "default"
            manifestPlaceholders = [
                    pushAppId: configs.pushAppId,
            ]
        }
        googlePlay {
            dimension = "default"
            manifestPlaceholders = [
                    pushAppId    : configs.pushAppId,
                    pushAppKey   : configs.pushAppKey,
                    pushAppSecret: configs.pushAppSecret
            ]
        }
    }
    // 配置 Java 编译版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    // 开启 ViewBinding
    buildFeatures {
        viewBinding true
    }

    // 编译忽略错误配置
    lintOptions {
        abortOnError false
    }
    // kotlin 配置
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
}

dependencies {
    /**
     * 这里依赖要根据渠道不同加载不同的依赖
     * https://docs.getui.com/getui/mobile/android/androidstudio/
     */
    // 国内环境依赖
    developImplementation 'com.getui:gtsdk:3.2.10.0'  //个推SDK
    developImplementation 'com.getui:gtc:3.1.9.0'  //个推核心组件

    // 国外环境依赖 因为海外和国内sdk仓库不同，这里不能同时使用远程依赖
    googlePlayImplementation 'com.getui:sdk-for-google-play:4.3.9.0'
    // 海外环境依赖
//    googlePlayApi(fileTree(dir: 'libs', include: ['*.jar', '*.aar']))

    // 依赖 base 库
    implementation project(':vmbase')
}
